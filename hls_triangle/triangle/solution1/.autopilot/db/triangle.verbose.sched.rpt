

================================================================
== Vivado HLS Report for 'triangle'
================================================================
* Date:           Fri Apr  5 17:32:16 2019

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        triangle
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z100ffg900-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.23|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    2|    2|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
* FSM state operations: 

 <State 1>: 8.23ns
ST_1: val_V_load (8)  [1/1] 0.00ns  loc: triangle.cpp:30
codeRepl_ifconv:4  %val_V_load = load i24* @val_V, align 4

ST_1: tmp (9)  [1/1] 0.00ns  loc: triangle.cpp:32
codeRepl_ifconv:5  %tmp = call i32 @_ssdm_op_BitConcatenate.i32.i24.i8(i24 %val_V_load, i8 0)

ST_1: StgValue_5 (10)  [2/2] 0.00ns  loc: triangle.cpp:32
codeRepl_ifconv:6  call void @_ssdm_op_Write.axis.volatile.i32P(i32* %out_V, i32 %tmp)

ST_1: err_load (11)  [1/1] 0.00ns  loc: triangle.cpp:36
codeRepl_ifconv:7  %err_load = load i32* @err, align 4

ST_1: tmp_6 (12)  [1/1] 2.90ns  loc: triangle.cpp:36
codeRepl_ifconv:8  %tmp_6 = add nsw i32 %err_load, 32000

ST_1: tmp_7 (13)  [1/1] 3.26ns  loc: triangle.cpp:37
codeRepl_ifconv:9  %tmp_7 = icmp sgt i32 %tmp_6, 48000

ST_1: tmp_8 (14)  [1/1] 2.90ns  loc: triangle.cpp:38
codeRepl_ifconv:10  %tmp_8 = add nsw i32 %err_load, -64000

ST_1: err_new (17)  [1/1] 2.07ns  loc: triangle.cpp:37
codeRepl_ifconv:13  %err_new = select i1 %tmp_7, i32 %tmp_8, i32 %tmp_6

ST_1: StgValue_11 (18)  [1/1] 0.00ns  loc: triangle.cpp:36
codeRepl_ifconv:14  store i32 %err_new, i32* @err, align 4


 <State 2>: 2.60ns
ST_2: StgValue_12 (4)  [1/1] 0.00ns
codeRepl_ifconv:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %out_V), !map !43

ST_2: StgValue_13 (5)  [1/1] 0.00ns
codeRepl_ifconv:1  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @triangle_str) nounwind

ST_2: StgValue_14 (6)  [1/1] 0.00ns
codeRepl_ifconv:2  call void (...)* @_ssdm_op_SpecInterface(i32* %out_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_2: StgValue_15 (7)  [1/1] 0.00ns  loc: triangle.cpp:27
codeRepl_ifconv:3  call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_2: StgValue_16 (10)  [1/2] 0.00ns  loc: triangle.cpp:32
codeRepl_ifconv:6  call void @_ssdm_op_Write.axis.volatile.i32P(i32* %out_V, i32 %tmp)

ST_2: val_V_new_v_cast_cas (15)  [1/1] 0.00ns  loc: triangle.cpp:37 (grouped into LUT with out node val_V_new)
codeRepl_ifconv:11  %val_V_new_v_cast_cas = select i1 %tmp_7, i24 349526, i24 349525

ST_2: val_V_new (16)  [1/1] 2.60ns  loc: triangle.cpp:30 (out node of the LUT)
codeRepl_ifconv:12  %val_V_new = add i24 %val_V_load, %val_V_new_v_cast_cas

ST_2: StgValue_19 (19)  [1/1] 0.00ns  loc: triangle.cpp:35
codeRepl_ifconv:15  store i24 %val_V_new, i24* @val_V, align 4

ST_2: StgValue_20 (20)  [1/1] 0.00ns  loc: triangle.cpp:41
codeRepl_ifconv:16  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.23ns
The critical path consists of the following:
	'load' operation ('err_load', triangle.cpp:36) on static variable 'err' [11]  (0 ns)
	'add' operation ('tmp_6', triangle.cpp:36) [12]  (2.9 ns)
	'icmp' operation ('tmp_7', triangle.cpp:37) [13]  (3.26 ns)
	'select' operation ('err_new', triangle.cpp:37) [17]  (2.07 ns)

 <State 2>: 2.6ns
The critical path consists of the following:
	'select' operation ('val_V_new_v_cast_cas', triangle.cpp:37) [15]  (0 ns)
	'add' operation ('val_V_new', triangle.cpp:30) [16]  (2.6 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
