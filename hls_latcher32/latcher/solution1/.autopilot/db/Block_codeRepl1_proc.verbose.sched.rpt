

================================================================
== Vivado HLS Report for 'Block_codeRepl1_proc'
================================================================
* Date:           Thu Apr  4 22:36:56 2019

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        latcher
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx485tffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      1.97|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 1
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
* FSM state operations: 

 <State 1>: 1.97ns
ST_1: StgValue_2 (6)  [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecInterface(i32* %in_V_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)

ST_1: StgValue_3 (7)  [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i32* %out_V_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)

ST_1: latch_V_read (8)  [1/1] 0.00ns
newFuncRoot:2  %latch_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %latch_V)

ST_1: state_load (9)  [1/1] 0.00ns  loc: latcher.cpp:39
newFuncRoot:3  %state_load = load i2* @state, align 1

ST_1: StgValue_6 (10)  [1/1] 1.97ns  loc: latcher.cpp:39
newFuncRoot:4  switch i2 %state_load, label %._crit_edge14 [
    i2 0, label %0
    i2 1, label %1
    i2 -2, label %2
  ]

ST_1: tmp_1 (12)  [1/1] 0.00ns  loc: latcher.cpp:50
:0  %tmp_1 = call i1 @_ssdm_op_NbWriteReq.axis.i32P(i32* %out_V_V, i32 1)

ST_1: StgValue_8 (13)  [1/1] 0.00ns  loc: latcher.cpp:50
:1  br i1 %tmp_1, label %5, label %._crit_edge17

ST_1: tmp_V_1 (15)  [1/1] 0.00ns  loc: latcher.cpp:51
:0  %tmp_V_1 = load i32* @tmp_V, align 4

ST_1: StgValue_10 (16)  [1/1] 0.00ns  loc: latcher.cpp:51
:1  call void @_ssdm_op_Write.axis.volatile.i32P(i32* %out_V_V, i32 %tmp_V_1)

ST_1: StgValue_11 (17)  [1/1] 1.15ns  loc: latcher.cpp:52
:2  store i2 0, i2* @state, align 1

ST_1: StgValue_12 (18)  [1/1] 0.00ns  loc: latcher.cpp:53
:3  br label %._crit_edge17

ST_1: StgValue_13 (20)  [1/1] 0.00ns  loc: latcher.cpp:54
._crit_edge17:0  br label %._crit_edge14

ST_1: tmp (22)  [1/1] 0.00ns  loc: latcher.cpp:44
:0  %tmp = call i1 @_ssdm_op_NbReadReq.axis.i32P(i32* %in_V_V, i32 1)

ST_1: StgValue_15 (23)  [1/1] 0.00ns  loc: latcher.cpp:44
:1  br i1 %tmp, label %4, label %._crit_edge16

ST_1: tmp_V_1_1 (25)  [1/1] 0.00ns  loc: latcher.cpp:45
:0  %tmp_V_1_1 = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %in_V_V)

ST_1: StgValue_17 (26)  [1/1] 0.00ns  loc: latcher.cpp:45
:1  store i32 %tmp_V_1_1, i32* @tmp_V, align 4

ST_1: StgValue_18 (27)  [1/1] 1.15ns  loc: latcher.cpp:46
:2  store i2 -2, i2* @state, align 1

ST_1: StgValue_19 (28)  [1/1] 0.00ns  loc: latcher.cpp:47
:3  br label %._crit_edge16

ST_1: StgValue_20 (30)  [1/1] 0.00ns  loc: latcher.cpp:48
._crit_edge16:0  br label %._crit_edge14

ST_1: StgValue_21 (32)  [1/1] 0.00ns  loc: latcher.cpp:41
:0  br i1 %latch_V_read, label %3, label %._crit_edge15

ST_1: StgValue_22 (34)  [1/1] 1.15ns  loc: latcher.cpp:41
:0  store i2 1, i2* @state, align 1

ST_1: StgValue_23 (35)  [1/1] 0.00ns  loc: latcher.cpp:41
:1  br label %._crit_edge15

ST_1: StgValue_24 (37)  [1/1] 0.00ns  loc: latcher.cpp:42
._crit_edge15:0  br label %._crit_edge14

ST_1: StgValue_25 (39)  [1/1] 0.00ns
._crit_edge14:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.97ns
The critical path consists of the following:
	'load' operation ('state_load', latcher.cpp:39) on static variable 'state' [9]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
